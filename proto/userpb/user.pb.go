// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.6.1
// source: proto/userpb/user.proto

package userpb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	datetime "google.golang.org/genproto/googleapis/type/datetime"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RequestStatus int32

const (
	RequestStatus_STATUS_DECLINED RequestStatus = 0
	RequestStatus_STATUS_ACCEPTED RequestStatus = 1
)

// Enum value maps for RequestStatus.
var (
	RequestStatus_name = map[int32]string{
		0: "STATUS_DECLINED",
		1: "STATUS_ACCEPTED",
	}
	RequestStatus_value = map[string]int32{
		"STATUS_DECLINED": 0,
		"STATUS_ACCEPTED": 1,
	}
)

func (x RequestStatus) Enum() *RequestStatus {
	p := new(RequestStatus)
	*p = x
	return p
}

func (x RequestStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_userpb_user_proto_enumTypes[0].Descriptor()
}

func (RequestStatus) Type() protoreflect.EnumType {
	return &file_proto_userpb_user_proto_enumTypes[0]
}

func (x RequestStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestStatus.Descriptor instead.
func (RequestStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_userpb_user_proto_rawDescGZIP(), []int{0}
}

type AuthUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Email    string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *AuthUser) Reset() {
	*x = AuthUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_userpb_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthUser) ProtoMessage() {}

func (x *AuthUser) ProtoReflect() protoreflect.Message {
	mi := &file_proto_userpb_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthUser.ProtoReflect.Descriptor instead.
func (*AuthUser) Descriptor() ([]byte, []int) {
	return file_proto_userpb_user_proto_rawDescGZIP(), []int{0}
}

func (x *AuthUser) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AuthUser) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AuthUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type AuthUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *AuthUser `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *AuthUserRequest) Reset() {
	*x = AuthUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_userpb_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthUserRequest) ProtoMessage() {}

func (x *AuthUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_userpb_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthUserRequest.ProtoReflect.Descriptor instead.
func (*AuthUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_userpb_user_proto_rawDescGZIP(), []int{1}
}

func (x *AuthUserRequest) GetUser() *AuthUser {
	if x != nil {
		return x.User
	}
	return nil
}

type UserFriend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username     string             `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Avatar       string             `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	FriendsSince *datetime.DateTime `protobuf:"bytes,4,opt,name=friends_since,json=friendsSince,proto3" json:"friends_since,omitempty"`
	PostsCount   int32              `protobuf:"varint,5,opt,name=posts_count,json=postsCount,proto3" json:"posts_count,omitempty"`
}

func (x *UserFriend) Reset() {
	*x = UserFriend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_userpb_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriend) ProtoMessage() {}

func (x *UserFriend) ProtoReflect() protoreflect.Message {
	mi := &file_proto_userpb_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriend.ProtoReflect.Descriptor instead.
func (*UserFriend) Descriptor() ([]byte, []int) {
	return file_proto_userpb_user_proto_rawDescGZIP(), []int{2}
}

func (x *UserFriend) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserFriend) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserFriend) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserFriend) GetFriendsSince() *datetime.DateTime {
	if x != nil {
		return x.FriendsSince
	}
	return nil
}

func (x *UserFriend) GetPostsCount() int32 {
	if x != nil {
		return x.PostsCount
	}
	return 0
}

type ActiveFriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username          string               `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Avatar            string               `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	SentAt            *datetime.DateTime   `protobuf:"bytes,4,opt,name=sent_at,json=sentAt,proto3" json:"sent_at,omitempty"`
	TotalPosts        int32                `protobuf:"varint,5,opt,name=total_posts,json=totalPosts,proto3" json:"total_posts,omitempty"`
	LatestBeers       []*BeerMinimized     `protobuf:"bytes,6,rep,name=latest_beers,json=latestBeers,proto3" json:"latest_beers,omitempty"`
	FavoriteBeers     []*BeerMinimized     `protobuf:"bytes,7,rep,name=favorite_beers,json=favoriteBeers,proto3" json:"favorite_beers,omitempty"`
	FavoriteBreweries []*FavoriteBreweries `protobuf:"bytes,8,rep,name=favorite_breweries,json=favoriteBreweries,proto3" json:"favorite_breweries,omitempty"`
}

func (x *ActiveFriendRequest) Reset() {
	*x = ActiveFriendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_userpb_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveFriendRequest) ProtoMessage() {}

func (x *ActiveFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_userpb_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveFriendRequest.ProtoReflect.Descriptor instead.
func (*ActiveFriendRequest) Descriptor() ([]byte, []int) {
	return file_proto_userpb_user_proto_rawDescGZIP(), []int{3}
}

func (x *ActiveFriendRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActiveFriendRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ActiveFriendRequest) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ActiveFriendRequest) GetSentAt() *datetime.DateTime {
	if x != nil {
		return x.SentAt
	}
	return nil
}

func (x *ActiveFriendRequest) GetTotalPosts() int32 {
	if x != nil {
		return x.TotalPosts
	}
	return 0
}

func (x *ActiveFriendRequest) GetLatestBeers() []*BeerMinimized {
	if x != nil {
		return x.LatestBeers
	}
	return nil
}

func (x *ActiveFriendRequest) GetFavoriteBeers() []*BeerMinimized {
	if x != nil {
		return x.FavoriteBeers
	}
	return nil
}

func (x *ActiveFriendRequest) GetFavoriteBreweries() []*FavoriteBreweries {
	if x != nil {
		return x.FavoriteBreweries
	}
	return nil
}

type BestBeer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AvgScore float32 `protobuf:"fixed32,3,opt,name=avg_score,json=avgScore,proto3" json:"avg_score,omitempty"`
}

func (x *BestBeer) Reset() {
	*x = BestBeer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_userpb_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BestBeer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BestBeer) ProtoMessage() {}

func (x *BestBeer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_userpb_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BestBeer.ProtoReflect.Descriptor instead.
func (*BestBeer) Descriptor() ([]byte, []int) {
	return file_proto_userpb_user_proto_rawDescGZIP(), []int{4}
}

func (x *BestBeer) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BestBeer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BestBeer) GetAvgScore() float32 {
	if x != nil {
		return x.AvgScore
	}
	return 0
}

type Brewery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Brewery) Reset() {
	*x = Brewery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_userpb_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Brewery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Brewery) ProtoMessage() {}

func (x *Brewery) ProtoReflect() protoreflect.Message {
	mi := &file_proto_userpb_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Brewery.ProtoReflect.Descriptor instead.
func (*Brewery) Descriptor() ([]byte, []int) {
	return file_proto_userpb_user_proto_rawDescGZIP(), []int{5}
}

func (x *Brewery) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Brewery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type BeerMinimized struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Score   int32    `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
	Brewery *Brewery `protobuf:"bytes,4,opt,name=brewery,proto3" json:"brewery,omitempty"`
}

func (x *BeerMinimized) Reset() {
	*x = BeerMinimized{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_userpb_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeerMinimized) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeerMinimized) ProtoMessage() {}

func (x *BeerMinimized) ProtoReflect() protoreflect.Message {
	mi := &file_proto_userpb_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeerMinimized.ProtoReflect.Descriptor instead.
func (*BeerMinimized) Descriptor() ([]byte, []int) {
	return file_proto_userpb_user_proto_rawDescGZIP(), []int{6}
}

func (x *BeerMinimized) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BeerMinimized) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BeerMinimized) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *BeerMinimized) GetBrewery() *Brewery {
	if x != nil {
		return x.Brewery
	}
	return nil
}

type FavoriteBreweries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	BeersTasted int32     `protobuf:"varint,3,opt,name=beers_tasted,json=beersTasted,proto3" json:"beers_tasted,omitempty"`
	AvgScore    float32   `protobuf:"fixed32,4,opt,name=avg_score,json=avgScore,proto3" json:"avg_score,omitempty"`
	BestBeer    *BestBeer `protobuf:"bytes,5,opt,name=best_beer,json=bestBeer,proto3" json:"best_beer,omitempty"`
}

func (x *FavoriteBreweries) Reset() {
	*x = FavoriteBreweries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_userpb_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavoriteBreweries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavoriteBreweries) ProtoMessage() {}

func (x *FavoriteBreweries) ProtoReflect() protoreflect.Message {
	mi := &file_proto_userpb_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavoriteBreweries.ProtoReflect.Descriptor instead.
func (*FavoriteBreweries) Descriptor() ([]byte, []int) {
	return file_proto_userpb_user_proto_rawDescGZIP(), []int{7}
}

func (x *FavoriteBreweries) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FavoriteBreweries) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FavoriteBreweries) GetBeersTasted() int32 {
	if x != nil {
		return x.BeersTasted
	}
	return 0
}

func (x *FavoriteBreweries) GetAvgScore() float32 {
	if x != nil {
		return x.AvgScore
	}
	return 0
}

func (x *FavoriteBreweries) GetBestBeer() *BestBeer {
	if x != nil {
		return x.BestBeer
	}
	return nil
}

type AuthUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *AuthUserResponse) Reset() {
	*x = AuthUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_userpb_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthUserResponse) ProtoMessage() {}

func (x *AuthUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_userpb_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthUserResponse.ProtoReflect.Descriptor instead.
func (*AuthUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_userpb_user_proto_rawDescGZIP(), []int{8}
}

func (x *AuthUserResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type FriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReceiverId int32 `protobuf:"varint,1,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`
}

func (x *FriendRequest) Reset() {
	*x = FriendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_userpb_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendRequest) ProtoMessage() {}

func (x *FriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_userpb_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendRequest.ProtoReflect.Descriptor instead.
func (*FriendRequest) Descriptor() ([]byte, []int) {
	return file_proto_userpb_user_proto_rawDescGZIP(), []int{9}
}

func (x *FriendRequest) GetReceiverId() int32 {
	if x != nil {
		return x.ReceiverId
	}
	return 0
}

type UpdateFriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReceiverId int32         `protobuf:"varint,1,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`
	Status     RequestStatus `protobuf:"varint,2,opt,name=status,proto3,enum=proto.user.RequestStatus" json:"status,omitempty"`
}

func (x *UpdateFriendRequest) Reset() {
	*x = UpdateFriendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_userpb_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFriendRequest) ProtoMessage() {}

func (x *UpdateFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_userpb_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFriendRequest.ProtoReflect.Descriptor instead.
func (*UpdateFriendRequest) Descriptor() ([]byte, []int) {
	return file_proto_userpb_user_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateFriendRequest) GetReceiverId() int32 {
	if x != nil {
		return x.ReceiverId
	}
	return 0
}

func (x *UpdateFriendRequest) GetStatus() RequestStatus {
	if x != nil {
		return x.Status
	}
	return RequestStatus_STATUS_DECLINED
}

type FriendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSended bool `protobuf:"varint,1,opt,name=is_sended,json=isSended,proto3" json:"is_sended,omitempty"`
}

func (x *FriendResponse) Reset() {
	*x = FriendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_userpb_user_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendResponse) ProtoMessage() {}

func (x *FriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_userpb_user_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendResponse.ProtoReflect.Descriptor instead.
func (*FriendResponse) Descriptor() ([]byte, []int) {
	return file_proto_userpb_user_proto_rawDescGZIP(), []int{11}
}

func (x *FriendResponse) GetIsSended() bool {
	if x != nil {
		return x.IsSended
	}
	return false
}

type UserFriendsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UserFriendsRequest) Reset() {
	*x = UserFriendsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_userpb_user_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendsRequest) ProtoMessage() {}

func (x *UserFriendsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_userpb_user_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendsRequest.ProtoReflect.Descriptor instead.
func (*UserFriendsRequest) Descriptor() ([]byte, []int) {
	return file_proto_userpb_user_proto_rawDescGZIP(), []int{12}
}

func (x *UserFriendsRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type UserFriendsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total   int32         `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Friends []*UserFriend `protobuf:"bytes,2,rep,name=friends,proto3" json:"friends,omitempty"`
}

func (x *UserFriendsResponse) Reset() {
	*x = UserFriendsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_userpb_user_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendsResponse) ProtoMessage() {}

func (x *UserFriendsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_userpb_user_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendsResponse.ProtoReflect.Descriptor instead.
func (*UserFriendsResponse) Descriptor() ([]byte, []int) {
	return file_proto_userpb_user_proto_rawDescGZIP(), []int{13}
}

func (x *UserFriendsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *UserFriendsResponse) GetFriends() []*UserFriend {
	if x != nil {
		return x.Friends
	}
	return nil
}

type FriendsRequests struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    int32         `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Requests []*UserFriend `protobuf:"bytes,2,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *FriendsRequests) Reset() {
	*x = FriendsRequests{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_userpb_user_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendsRequests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendsRequests) ProtoMessage() {}

func (x *FriendsRequests) ProtoReflect() protoreflect.Message {
	mi := &file_proto_userpb_user_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendsRequests.ProtoReflect.Descriptor instead.
func (*FriendsRequests) Descriptor() ([]byte, []int) {
	return file_proto_userpb_user_proto_rawDescGZIP(), []int{14}
}

func (x *FriendsRequests) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *FriendsRequests) GetRequests() []*UserFriend {
	if x != nil {
		return x.Requests
	}
	return nil
}

var File_proto_userpb_user_proto protoreflect.FileDescriptor

var file_proto_userpb_user_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x70, 0x62, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x1a, 0x22, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f,
	0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x58,
	0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x3b, 0x0a, 0x0f, 0x41, 0x75, 0x74, 0x68,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0xad, 0x01, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x3a, 0x0a, 0x0d, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x73, 0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x53,
	0x69, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xf8, 0x02, 0x0a, 0x13, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x74, 0x41,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x73,
	0x74, 0x73, 0x12, 0x3c, 0x0a, 0x0c, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x62, 0x65, 0x65,
	0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x42, 0x65, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x69,
	0x7a, 0x65, 0x64, 0x52, 0x0b, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x65, 0x65, 0x72, 0x73,
	0x12, 0x40, 0x0a, 0x0e, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x62, 0x65, 0x65,
	0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x42, 0x65, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x69,
	0x7a, 0x65, 0x64, 0x52, 0x0d, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x42, 0x65, 0x65,
	0x72, 0x73, 0x12, 0x4c, 0x0a, 0x12, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x62,
	0x72, 0x65, 0x77, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x46, 0x61, 0x76, 0x6f,
	0x72, 0x69, 0x74, 0x65, 0x42, 0x72, 0x65, 0x77, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x11, 0x66,
	0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x42, 0x72, 0x65, 0x77, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x22, 0x4b, 0x0a, 0x08, 0x42, 0x65, 0x73, 0x74, 0x42, 0x65, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x67, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x08, 0x61, 0x76, 0x67, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x2d, 0x0a,
	0x07, 0x42, 0x72, 0x65, 0x77, 0x65, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x78, 0x0a, 0x0d,
	0x42, 0x65, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x62, 0x72, 0x65, 0x77, 0x65,
	0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x42, 0x72, 0x65, 0x77, 0x65, 0x72, 0x79, 0x52, 0x07, 0x62,
	0x72, 0x65, 0x77, 0x65, 0x72, 0x79, 0x22, 0xaa, 0x01, 0x0a, 0x11, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x42, 0x72, 0x65, 0x77, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x62, 0x65, 0x65, 0x72, 0x73, 0x5f, 0x74, 0x61, 0x73, 0x74, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x62, 0x65, 0x65, 0x72, 0x73, 0x54, 0x61, 0x73,
	0x74, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x67, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x61, 0x76, 0x67, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x12, 0x31, 0x0a, 0x09, 0x62, 0x65, 0x73, 0x74, 0x5f, 0x62, 0x65, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x42, 0x65, 0x73, 0x74, 0x42, 0x65, 0x65, 0x72, 0x52, 0x08, 0x62, 0x65, 0x73, 0x74, 0x42,
	0x65, 0x65, 0x72, 0x22, 0x35, 0x0a, 0x10, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x30, 0x0a, 0x0d, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x13,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2d, 0x0a, 0x0e, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x22, 0x2d, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x07, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x22, 0x5b, 0x0a, 0x0f, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x32, 0x0a,
	0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x2a, 0x39, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x45, 0x43,
	0x4c, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0x01, 0x32, 0x8e, 0x04, 0x0a,
	0x13, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x6e, 0x0a, 0x0f, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x1a, 0x12, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x3a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x12, 0x7e, 0x0a, 0x18, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22,
	0x23, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x12, 0x8a, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x33, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2d, 0x1a, 0x23, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2f, 0x7b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x3a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x7a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x73, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x42, 0x26, 0x5a,
	0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x72, 0x75, 0x6d,
	0x32, 0x36, 0x31, 0x2f, 0x62, 0x65, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_userpb_user_proto_rawDescOnce sync.Once
	file_proto_userpb_user_proto_rawDescData = file_proto_userpb_user_proto_rawDesc
)

func file_proto_userpb_user_proto_rawDescGZIP() []byte {
	file_proto_userpb_user_proto_rawDescOnce.Do(func() {
		file_proto_userpb_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_userpb_user_proto_rawDescData)
	})
	return file_proto_userpb_user_proto_rawDescData
}

var file_proto_userpb_user_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_userpb_user_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_proto_userpb_user_proto_goTypes = []interface{}{
	(RequestStatus)(0),          // 0: proto.user.RequestStatus
	(*AuthUser)(nil),            // 1: proto.user.AuthUser
	(*AuthUserRequest)(nil),     // 2: proto.user.AuthUserRequest
	(*UserFriend)(nil),          // 3: proto.user.UserFriend
	(*ActiveFriendRequest)(nil), // 4: proto.user.ActiveFriendRequest
	(*BestBeer)(nil),            // 5: proto.user.BestBeer
	(*Brewery)(nil),             // 6: proto.user.Brewery
	(*BeerMinimized)(nil),       // 7: proto.user.BeerMinimized
	(*FavoriteBreweries)(nil),   // 8: proto.user.FavoriteBreweries
	(*AuthUserResponse)(nil),    // 9: proto.user.AuthUserResponse
	(*FriendRequest)(nil),       // 10: proto.user.FriendRequest
	(*UpdateFriendRequest)(nil), // 11: proto.user.UpdateFriendRequest
	(*FriendResponse)(nil),      // 12: proto.user.FriendResponse
	(*UserFriendsRequest)(nil),  // 13: proto.user.UserFriendsRequest
	(*UserFriendsResponse)(nil), // 14: proto.user.UserFriendsResponse
	(*FriendsRequests)(nil),     // 15: proto.user.FriendsRequests
	(*datetime.DateTime)(nil),   // 16: google.type.DateTime
	(*emptypb.Empty)(nil),       // 17: google.protobuf.Empty
}
var file_proto_userpb_user_proto_depIdxs = []int32{
	1,  // 0: proto.user.AuthUserRequest.user:type_name -> proto.user.AuthUser
	16, // 1: proto.user.UserFriend.friends_since:type_name -> google.type.DateTime
	16, // 2: proto.user.ActiveFriendRequest.sent_at:type_name -> google.type.DateTime
	7,  // 3: proto.user.ActiveFriendRequest.latest_beers:type_name -> proto.user.BeerMinimized
	7,  // 4: proto.user.ActiveFriendRequest.favorite_beers:type_name -> proto.user.BeerMinimized
	8,  // 5: proto.user.ActiveFriendRequest.favorite_breweries:type_name -> proto.user.FavoriteBreweries
	6,  // 6: proto.user.BeerMinimized.brewery:type_name -> proto.user.Brewery
	5,  // 7: proto.user.FavoriteBreweries.best_beer:type_name -> proto.user.BestBeer
	0,  // 8: proto.user.UpdateFriendRequest.status:type_name -> proto.user.RequestStatus
	3,  // 9: proto.user.UserFriendsResponse.friends:type_name -> proto.user.UserFriend
	3,  // 10: proto.user.FriendsRequests.requests:type_name -> proto.user.UserFriend
	2,  // 11: proto.user.UserDeliveryService.AuthUserHandler:input_type -> proto.user.AuthUserRequest
	10, // 12: proto.user.UserDeliveryService.SendFriendRequestHandler:input_type -> proto.user.FriendRequest
	11, // 13: proto.user.UserDeliveryService.UpdateFriendRequestHandler:input_type -> proto.user.UpdateFriendRequest
	13, // 14: proto.user.UserDeliveryService.GetUserFriends:input_type -> proto.user.UserFriendsRequest
	9,  // 15: proto.user.UserDeliveryService.AuthUserHandler:output_type -> proto.user.AuthUserResponse
	12, // 16: proto.user.UserDeliveryService.SendFriendRequestHandler:output_type -> proto.user.FriendResponse
	17, // 17: proto.user.UserDeliveryService.UpdateFriendRequestHandler:output_type -> google.protobuf.Empty
	14, // 18: proto.user.UserDeliveryService.GetUserFriends:output_type -> proto.user.UserFriendsResponse
	15, // [15:19] is the sub-list for method output_type
	11, // [11:15] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_proto_userpb_user_proto_init() }
func file_proto_userpb_user_proto_init() {
	if File_proto_userpb_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_userpb_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_userpb_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_userpb_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_userpb_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveFriendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_userpb_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BestBeer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_userpb_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Brewery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_userpb_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeerMinimized); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_userpb_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavoriteBreweries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_userpb_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_userpb_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_userpb_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFriendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_userpb_user_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_userpb_user_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_userpb_user_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_userpb_user_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendsRequests); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_userpb_user_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_userpb_user_proto_goTypes,
		DependencyIndexes: file_proto_userpb_user_proto_depIdxs,
		EnumInfos:         file_proto_userpb_user_proto_enumTypes,
		MessageInfos:      file_proto_userpb_user_proto_msgTypes,
	}.Build()
	File_proto_userpb_user_proto = out.File
	file_proto_userpb_user_proto_rawDesc = nil
	file_proto_userpb_user_proto_goTypes = nil
	file_proto_userpb_user_proto_depIdxs = nil
}
